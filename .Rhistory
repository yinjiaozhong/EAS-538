setwd("~/Desktop/EAS 538 Lab")
library(dplyr)
library(tidyr)
#read in files
RY <- read.csv(file = "RY.csv", sep = ",", header = T, comment.char = "#")
id <- read.csv(file = "sp_id.csv", sep = ",", header = T, comment.char = "#")
trait <- read.csv(file = "sp_stoi_traits.csv", sep = ",", header = T, comment.char = "#")
#check data
head(RY, 3)
head(id, 3)
head(trait, 3)
RY <- mutate(RY, avgRY = (RY1 + RY2) / 2)
head(RY)
RY.t <-mutate(RY, RYTotal = RY1 + RY2)
head(RY.t)
# left join the RY and id
colnames(id)[2] <- "sp1"
RY.m <- left_join(RY, id, by = "sp1")
colnames(RY.m)[6] <- "sp1_name"
colnames(id)[2] <- "sp2"
RY.m <- left_join(RY.m, id, by = "sp2")
colnames(RY.m)[7] <- "sp2_name"
# left join the RY.m and trait
colnames(trait)[1] <- "sp1_name"
RY.mtl <- left_join(RY.m, trait, by = "sp1_name")
mean(RY.mtl[, "C.N"], na.rm = TRUE)
RY.mtr <- right_join(RY.m, trait, by = "sp1_name")
RY.long <- gather(RY, key = RY_type, value = value, RY1:avgRY)
head(RY.long)
RY.wide <- spread(RY.long, key = RY_type, value = value)
head(RY.wide)
sp1 <- subset(RY, sp1 == 1, select = c(RY1))
head(sp1)
sp17 <- subset(RY, sp2 == 17)
head(sp17)
sp17_RY2 <- sp17$RY2
head(sp17_RY2)
sp_test1 <- filter(RY, sp2 == 17 & sp1 == 1)
head(sp_test1)
sp_test2 <- filter(RY, sp2 == 17 | sp1 == 1)
head(sp_test2)
# read the original data
RY <- read.csv('~/Desktop/EAS 538 Lab/RY.csv')
id <- read.csv('~/Desktop/EAS 538 Lab/sp_id.csv')
trait <- read.csv('~/Desktop/EAS 538 Lab/sp_stoi_traits.csv')
trait.id <- inner_join(trait, id, by=join_by(Species.name==sp))
goal <- RY %>%
mutate(avgRY = (RY1 + RY2) / 2) %>%
inner_join(trait.id, by=c('sp1'='id')) %>%
inner_join(trait.id, by=c('sp2'='id'), suffix=c('.x', '.y'))
head(goal)
library(dplyr)
library(tidyr)
#read in files
RY <- read.csv(file = "RY.csv", sep = ",", header = T, comment.char = "#")
id <- read.csv(file = "sp_id.csv", sep = ",", header = T, comment.char = "#")
trait <- read.csv(file = "sp_stoi_traits.csv", sep = ",", header = T, comment.char = "#")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/EAS 538 Lab")
library(dplyr)
library(tidyr)
#read in files
RY <- read.csv(file = "RY.csv", sep = ",", header = T, comment.char = "#")
id <- read.csv(file = "sp_id.csv", sep = ",", header = T, comment.char = "#")
trait <- read.csv(file = "sp_stoi_traits.csv", sep = ",", header = T, comment.char = "#")
#check data
head(RY, 3)
head(id, 3)
head(trait, 3)
RY <- mutate(RY, avgRY = (RY1 + RY2) / 2)
head(RY)
RY.t <-mutate(RY, RYTotal = RY1 + RY2)
head(RY.t)
# left join the RY and id
colnames(id)[2] <- "sp1"
RY.m <- left_join(RY, id, by = "sp1")
colnames(RY.m)[6] <- "sp1_name"
colnames(id)[2] <- "sp2"
RY.m <- left_join(RY.m, id, by = "sp2")
colnames(RY.m)[7] <- "sp2_name"
# left join the RY.m and trait
colnames(trait)[1] <- "sp1_name"
RY.mtl <- left_join(RY.m, trait, by = "sp1_name")
mean(RY.mtl[, "C.N"], na.rm = TRUE)
RY.mtr <- right_join(RY.m, trait, by = "sp1_name")
RY.long <- gather(RY, key = RY_type, value = value, RY1:avgRY)
head(RY.long)
RY.wide <- spread(RY.long, key = RY_type, value = value)
head(RY.wide)
sp1 <- subset(RY, sp1 == 1, select = c(RY1))
head(sp1)
sp17 <- subset(RY, sp2 == 17)
head(sp17)
sp17_RY2 <- sp17$RY2
head(sp17_RY2)
sp_test1 <- filter(RY, sp2 == 17 & sp1 == 1)
head(sp_test1)
sp_test2 <- filter(RY, sp2 == 17 | sp1 == 1)
head(sp_test2)
# read the original data
RY <- read.csv('~/Desktop/EAS 538 Lab/RY.csv')
id <- read.csv('~/Desktop/EAS 538 Lab/sp_id.csv')
trait <- read.csv('~/Desktop/EAS 538 Lab/sp_stoi_traits.csv')
trait.id <- inner_join(trait, id, by=join_by(Species.name==sp))
goal <- RY %>%
mutate(avgRY = (RY1 + RY2) / 2) %>%
inner_join(trait.id, by=c('sp1'='id')) %>%
inner_join(trait.id, by=c('sp2'='id'), suffix=c('.x', '.y'))
head(goal)
suppressMessages(library(dplyr, quietly = TRUE))
library(dplyr)
suppressMessages(library(dplyr, quietly = TRUE))
library(tidyr)
#read in files
RY <- read.csv(file = "RY.csv", sep = ",", header = T, comment.char = "#")
id <- read.csv(file = "sp_id.csv", sep = ",", header = T, comment.char = "#")
trait <- read.csv(file = "sp_stoi_traits.csv", sep = ",", header = T, comment.char = "#")
head(sp17_RY2)
class(sp17_RY2)
sp17_RY2 <- subset(sp17, select= c(RY2))
head(sp17_RY2)
knitr::opts_chunk$set(echo = TRUE)
ccyes <- c(78, 62)
ccno <- c(22, 38)
state <- c('New York', 'Kentucky')
contable <- rbind(ccyes, ccno)
colnames(contable) <- state
contable
ccyes <- c(78, 62)
ccno <- c(22, 38)
state <- c('New York', 'Kentucky')
contable <- rbind(ccyes, ccno)
colnames(contable) <- state
contable
chisq.test(contable)
head(OrchardSprays)
?OrchardSprays
head(OrchardSprays)
?OrchardSprays
boxplot(decrease ~ treatment, data = OrchardSprays, xlab = "treatment", ylab = "decrease")
head(OrchardSprays)
?OrchardSprays
boxplot(decrease ~ treatment, data = OrchardSprays, xlab = "treatment", ylab = "decrease")
spray.aov <- aov(decrease ~ tr)
head(OrchardSprays)
?OrchardSprays
boxplot(decrease ~ treatment, data = OrchardSprays, xlab = "treatment", ylab = "decrease")
spray.aov <- aov(decrease ~ tr)
head(OrchardSprays)
?OrchardSprays
boxplot(decrease ~ treatment, data = OrchardSprays, xlab = "treatment", ylab = "decrease")
spray.aov <- aov(decrease ~ treatment, data = OrchardSprays)
summary(spray.aov)
TukeyHSD(spray.aov)
head(CO2)
head(CO2)
?CO2
head(CO2)
?CO2
par(mfrow=c(2,1))
boxplot(uptake ~ Type, data = CO2, las=1, main = 'Origin of the plant')
head(CO2)
?CO2
par(mfrow=c(2,1))
boxplot(uptake ~ Type, data = CO2, las = 1, main = 'Origin of the plant')
boxplot(uptake ~ Treatment, data = CO2, las = 1, main = 'Treatment')
head(CO2)
?CO2
par(mfrow=c(2,1))
boxplot(uptake ~ Type, data = CO2, las = 1, main = 'Origin of the plant')
boxplot(uptake ~ Treatment, data = CO2, las = 1, main = 'Treatment')
CO2.aov <- aov(uptake ~ Treatment + Type, data = CO2)
summary(CO2.aov)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/EAS 538 Lab")
setwd("~/Desktop/EAS 538 Lab")
library(car)
library(relaimpo)
setwd("~/Desktop/EAS 538 Lab")
install.packages("relaimpo")
library(car)
library(relaimpo)
library(lmtest)
setwd("~/Desktop/EAS 538 Lab")
library(car)
library(relaimpo)
library(lmtest)
setwd("~/Desktop/EAS 538 Lab")
library(car)
library(relaimpo)
library(lmtest)
# get lab data
yield <- read.csv('yielddata.csv')
head(yield)
setwd("~/Desktop/EAS 538 Lab")
library(car)
library(relaimpo)
library(lmtest)
# get lab data
yield <- read.csv('yielddata.csv')
head(yield)
# get scatter plot
pairs(yield[,3:12])
# get correlation of the continuous variables
cor(yield[,3:12])
# get correlation of the continuous variables
cor(yield[,3:12], use='complete.obs')
# get VIF
vif(lm(data=yield, Yield~Canal_Dist+Irrigated_Per+Literate+Cultivator+AgLabor+Rain+Temperature+Elevation+SowDate))
# get the univariate models of this two variables
univarmod1 <- lm(Yield~Temperature, data=yield)
univarmod2 <- lm(Yield~Elevation, data=yield)
# get the univariate models of this two variables
univarmod1 <- lm(Yield~Temperature, data=yield)
univarmod2 <- lm(Yield~Elevation, data=yield)
# get the multivariate model of this two variables
multivarmod <- lm(Yield~Temperature+Elevation, data=yield)
summary(univarmod1)
summary(univarmod2)
summary(multivarmod)
par(mfrow = c(1,2))
hist(yield$Yield)
qqPlot(yield$Yield)
fullmod2 <- lm(Yield ~ Canal_Dist + Irrigated_Per + Literate + Cultivator + AgLabor + Temperature + SowDate, data = yield)
smallmod <- lm(Yield ~ Canal_Dist + Irrigated_Per + Temperature + SowDate, data = yield)
# get the AIC
AIC(fullmod2)
AIC(smallmod)
## check the assumption of normality
# run Q-Q plot
qqPlot(residuals(fullmod2))
# use hapiro-Wilk test
shapiro.test(residuals(fullmod2))
## check the assumption of homoscedasticity
plot(residuals(fullmod2)~fitted(fullmod2), main='Residuals v.s. Fitted')
abline(h=0, col='blue')
# statistical tests
bptest(fullmod2)
ncvTest(fullmod2)
summary(fullmod2)
summary(univar_mod1)
summary(univarmod1)
library(stargazer)
install.packages("stargazer")
library(stargazer)
table <- stargazer(fullmod2, type = 'html')
writeLines(table, 'table.html')
library(car)
library(relaimpo)
library(lmtest)
library(stargazer)
# get lab data
yield <- read.csv('yielddata.csv')
head(yield)
table <- stargazer(fullmod2, type = 'html')
writeLines(table, 'table.html')
table <- stargazer(fullmod2, type = 'html')
writeLines(table, '~/Desktop/EAS 538 Lab/table.html')
calc.relimp(fullmod2, type=c('lmg'), rela=TRUE)
table <- stargazer(fullmod2, type = 'html')
writeLines(table, '~/Desktop/EAS 538 Lab/table.html')
calc.relimp(fullmod2, type=c('lmg'), rela=TRUE)
setwd("~/Desktop/EAS 538 Lab")
par(mfrow = c(1,2))
hist(yield$Yield)
qqPlot(yield$Yield)
knitr::opts_chunk$set(echo = TRUE)
# Set working directory
setwd("~/Desktop/EAS 538 Lab")
# Read in data
dataset <- read.csv(file = "sanddata.csv", sep = ",", header = T,comment.char = "#")
head(dataset, 3)
cor(dataset[,-6],dataset[,-6])
linmod <- lm(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
linmod <- lm(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
par(mfrow = c(2,2))
plot(juveniles ~ sand, data = dataset)
plot(juveniles ~ temperature, data = dataset)
plot(juveniles ~ rainfall, data = dataset)
plot(juveniles ~ humanpop, data = dataset)
linmod <- lm(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
par(mfrow = c(2,2))
plot(juveniles ~ sand, data = dataset)
linmod <- lm(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
par(mfrow = c(2,2))
plot(juveniles ~ sand, data = dataset)
plot(juveniles ~ temperature, data = dataset)
plot(juveniles ~ rainfall, data = dataset)
plot(juveniles ~ humanpop, data = dataset)
par(mfrow = c(2,2))
plot(linmod)
summary(linmod)
table(dataset$country)
dataset$country <- as.factor(dataset$country)
dataset$country <- relevel(dataset$country, ref = 'India')
dataset$country <- as.factor(dataset$country)
dataset$country <- relevel(dataset$country, ref = 'India')
linmod2 <- lm(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
summary(linmod2)
linmod3 <- lm(juveniles ~ temperature + rainfall + humanpop + country + sand, data = dataset)
summary(linmod3)
linmod4 <- lm(juveniles ~ -1 + temperature + rainfall + humanpop + country + sand, data = dataset)
summary(linmod4)
anomod <- aov(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
anomod <- aov(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
leveneTest(juveniles ~ country, data = dataset)
library(car)
# Set working directory
setwd("~/Desktop/EAS 538 Lab")
# Read in data
dataset <- read.csv(file = "sanddata.csv", sep = ",", header = T,comment.char = "#")
head(dataset, 3)
anomod <- aov(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
leveneTest(juveniles ~ country, data = dataset)
summary(anomod)
TukeyHSD(anomod)
anomod3 <- aov(juveniles ~ temperature + rainfall + humanpop + country + sand,data = dataset)
summary(anomod3)
anomod3 <- aov(juveniles ~ temperature + rainfall + humanpop + country + sand,data = dataset)
summary(anomod3)
dataset$country <- relevel(dataset$country, ref = 'China')
plot(1:1000, rep(-100, 1000), ylim = c(4000, 5500), xlim = c(50, 1000), xlab = 'Human Population', ylab = 'Juveniles')
abline(a = 5054.11977, b = -1.24563, col = 'blue') # China
abline(a = 5054.11977 - 818.65030, b = -1.24563 + 1.31526, col = 'red') # India
abline(a = 5054.11977 - 961.39246 , b = -1.24563 + 1.53082, col = 'orange') # Indonesia
abline(a = 5054.11977 - 676.65413, b = -1.24563 + 0.81239, col = 'green') # Malaysia
# get the data
data("iris")
# get the data
data("iris")
head(data,3)
# get the data
data("iris")
head(iris,3)
str(iris)
cor(iris, [, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")])
cor(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")])
# run linear regression model
linmod5 <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species, data = iris)
# run linear regression model
linmod5 <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species, data = iris)
summary(linmod5)
# check assumptions of linmod5
par(mfrow = c(2, 2))
# check assumptions of linmod5
par(mfrow = c(2, 2))
plot(linmod5)
summary(aov(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species, data = iris))
plot(1:1000, rep(-100, 1000), ylim = c(4000, 5500), xlim = c(50, 1000), xlab = 'Human Population', ylab = 'Juveniles')
# China
abline(a = 5054.11977, b = -1.24563, col = 'blue')
# India
abline(a = 5054.11977 - 818.65030, b = -1.24563 + 1.31526, col = 'red')
# Indonesia
abline(a = 5054.11977 - 961.39246 , b = -1.24563 + 1.53082, col = 'orange')
# Malaysia
abline(a = 5054.11977 - 676.65413, b = -1.24563 + 0.81239, col = 'green')
# run linear regression model
linmod6 <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species, data = iris)
summary(linmod6)
# check assumptions of linmod5
par(mfrow = c(2, 2))
plot(linmod6)
summary(aov(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species, data = iris))
dataset$country <- relevel(dataset$country, ref = 'China')
# Convert 'country' variable to factor if it's not already
dataset$country <- as.factor(dataset$country)
# Check if 'country' variable is ordered or unordered
is.ordered(dataset$country)
# If it's ordered, convert it to unordered
if (is.ordered(dataset$country)) {
dataset$country <- factor(dataset$country, ordered = FALSE)
}
dataset$country <- relevel(dataset$country, ref = 'China')
linmod5 <- lm(juveniles ~ sand + temperature + rainfall + humanpop +
country + humanpop*country, data = dataset)
summary(linmod5)
# Convert 'country' variable to factor if it's not already
#dataset$country <- as.factor(dataset$country)
# Check if 'country' variable is ordered or unordered
#is.ordered(dataset$country)
# If it's ordered, convert it to unordered
#if (is.ordered(dataset$country)) {
dataset$country <- factor(dataset$country, ordered = FALSE)
}
# Convert 'country' variable to factor if it's not already
#dataset$country <- as.factor(dataset$country)
# Check if 'country' variable is ordered or unordered
#is.ordered(dataset$country)
# If it's ordered, convert it to unordered
#if (is.ordered(dataset$country)) {
dataset$country <- factor(dataset$country, ordered = FALSE)
#}
dataset$country <- relevel(dataset$country, ref = 'China')
linmod5 <- lm(juveniles ~ sand + temperature + rainfall + humanpop +
country + humanpop*country, data = dataset)
summary(linmod5)
# get coefficients of each country
dataset$country <- relevel(dataset$country, ref = 'China')
linmod5 <- lm(juveniles ~ sand + temperature + rainfall + humanpop +
country + humanpop*country, data = dataset)
summary(linmod5)
# check assumptions of linmod5
par(mfrow = c(2, 4))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(2, 1))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(2, 2))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(2, 3))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(2, 8))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(2, 4))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(2, 3))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(2, 2))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(3, 2))
plot(linmod6)
# check assumptions of linmod5
par(mfrow = c(1, 2))
plot(linmod6)
# check assumptions of linmod6
par(mfrow = c(2, 2))
plot(linmod6)
# check assumptions of linmod6
par(mfrow = c(1, 2))
plot(linmod6)
# run linear regression model
linmod6 <- lm(Sepal.Length ~Petal.Length + Petal.Width + Species, data = iris)
summary(linmod6)
# run linear regression model
linmod6 <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species, data = iris)
summary(linmod6)
linmod <- lm(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
par(mfrow = c(1,2))
plot(juveniles ~ sand, data = dataset)
plot(juveniles ~ temperature, data = dataset)
plot(juveniles ~ rainfall, data = dataset)
plot(juveniles ~ humanpop, data = dataset)
linmod <- lm(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
par(mfrow = c(1,2))
plot(juveniles ~ sand, data = dataset)
plot(juveniles ~ temperature, data = dataset)
plot(juveniles ~ rainfall, data = dataset)
plot(juveniles ~ humanpop, data = dataset)
par(mfrow = c(2,2))
plot(linmod)
par(mfrow = c(1,2))
plot(linmod)
knitr::opts_chunk$set(echo = TRUE)
cor(dataset[,-6],dataset[,-6])
linmod <- lm(juveniles ~ sand + temperature + rainfall + humanpop + country, data = dataset)
par(mfrow = c(2,2))
plot(juveniles ~ sand, data = dataset)
plot(juveniles ~ temperature, data = dataset)
plot(juveniles ~ rainfall, data = dataset)
plot(juveniles ~ humanpop, data = dataset)
plot(linmod)
summary(linmod)
summary(anomod)
knitr::opts_chunk$set(echo = TRUE)
# Set working directory
setwd("~/Desktop/EAS 538 Lab")
# Read in data
nwork = read.csv('networking2.csv',stringsAsFactors = TRUE)
head(nwork)
# Set working directory
setwd("~/Desktop/EAS 538 Lab")
# Read in data
nwork = read.csv('networking2.csv',stringsAsFactors = TRUE)
head(nwork, 3)
lmod = lm(wages~networking,data=nwork)
summary(lmod)
nwork$school = relevel(nwork$school, ref = 'SEAS')
lmod2 = lm(wages ~ networking + school, data = nwork)
summary(lmod2)
irrdata = read.csv('irrdata.csv')
head(irrdata)
irrdata = read.csv('irrdata.csv')
head(irrdata, 3)
lmod3 = lm(yield ~ irrigation, data = irrdata)
summary(lmod3)
table(irrdata$state)
lmod4 = lm(yield ~ irrigation + state, data = irrdata)
summary(lmod4)
lmod4 = lm(yield ~ irrigation + state, data = irrdata)
summary(lmod4)
summary(lomd3)
summary(lmod3)
summary(lmod4)
lakedf = read.csv('lakedf.csv')
head(lakedf)
lakedf = read.csv('lakedf.csv')
head(lakedf, 3)
lmod5 = lm(prod ~ diversity + temp + rain + sun, data = lakedf)
summary(lmod5)
library(nlme) # please install this package first
mod = lme(prod ~ diversity + temp + rain + sun, random = ~1|lake, data = lakedf)
summary(mod)
summary(lmod5)
summary(mod)
